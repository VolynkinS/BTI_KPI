{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"index"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"dev/","text":"","title":"dev"},{"location":"django_cheat_sheet/","text":"Django 2.x Cheat Sheet Creating a virtual environment We need to create a virtual env for our app to run in: More Here Run this command in whatever folder you want to create your venv folder python -m venv venv Activate the virtualenv # Mac/Linux source ./venv/bin/activate # Windows venv\\Scripts\\activate - May need to add full path (c:\\users\\....venv\\Scripts\\activate.bat) Escape from venv deactivate Check packages installed in that venv pip freeze Create your project django-admin startproject PROJECTNAME Run Server (http://127.0.0.1:8000) CTRL+C to stop python manage.py runserver Create an app python manage.py startapp APPNAME Create migrations python manage.py makemigrations Run migration python manage.py migrate Collect Static Files python manage.py collectstatic Run Jupyter-notebook python manage.py shell_plus --notebook","title":"django cheat sheet"},{"location":"django_cheat_sheet/#django-2x-cheat-sheet","text":"","title":"Django 2.x Cheat Sheet"},{"location":"django_cheat_sheet/#creating-a-virtual-environment","text":"We need to create a virtual env for our app to run in: More Here Run this command in whatever folder you want to create your venv folder python -m venv venv","title":"Creating a virtual environment"},{"location":"django_cheat_sheet/#activate-the-virtualenv","text":"# Mac/Linux source ./venv/bin/activate # Windows venv\\Scripts\\activate - May need to add full path (c:\\users\\....venv\\Scripts\\activate.bat)","title":"Activate the virtualenv"},{"location":"django_cheat_sheet/#escape-from-venv","text":"deactivate","title":"Escape from venv"},{"location":"django_cheat_sheet/#check-packages-installed-in-that-venv","text":"pip freeze","title":"Check packages installed in that venv"},{"location":"django_cheat_sheet/#create-your-project","text":"django-admin startproject PROJECTNAME","title":"Create your project"},{"location":"django_cheat_sheet/#run-server-http1270018000-ctrlc-to-stop","text":"python manage.py runserver","title":"Run Server (http://127.0.0.1:8000) CTRL+C to stop"},{"location":"django_cheat_sheet/#create-an-app","text":"python manage.py startapp APPNAME","title":"Create an app"},{"location":"django_cheat_sheet/#create-migrations","text":"python manage.py makemigrations","title":"Create migrations"},{"location":"django_cheat_sheet/#run-migration","text":"python manage.py migrate","title":"Run migration"},{"location":"django_cheat_sheet/#collect-static-files","text":"python manage.py collectstatic","title":"Collect Static Files"},{"location":"django_cheat_sheet/#run-jupyter-notebook","text":"python manage.py shell_plus --notebook","title":"Run Jupyter-notebook"},{"location":"pip/","text":"Social network Django Version Django==4.0.5 Setting Jupyter jupyter pip install notebook Add to settings.py: os.environ['DJANGO_ALLOW_ASYNC_UNSAFE'] = 'true' Setting django-extensions django-extensions pip install django-extensions==3.1.5 Setting django_debug_toolbar django-debug-toolbar django-debug-toolbar==3.4.0 if settings.DEBUG: urlpatterns += [path('__debug__/', include('debug_toolbar.urls'))] Setting crispy-forms crispy-forms django-crispy-forms==1.14.0 Setting cleanup cleanup pip install django-cleanup==6.0.0 # cleanup must be placed last in INSTALLED_APPS 'django_cleanup.apps.CleanupConfig' Setting ckeditor ckeditor pip install django-ckeditor==6.4.2 Setting channels channels python -m pip install -U channels==3.0.4 Add to setting.py: ASGI_APPLICATION = 'name_your_project.asgi.application' CHANNEL_LAYERS = { 'default': { 'BACKEND': 'channels.layers.InMemoryChannelLayer' }, } Create routing.py next to settings.py and add: from channels.routing import ProtocolTypeRouter, URLRouter from channels.auth import AuthMiddlewareStack application = ProtocolTypeRouter({ 'websocket': AuthMiddlewareStack( URLRouter( # chat.routing.websocket_urlpatterns ) ), }) Setting django-allauth django-allauth pip install django-allauth==0.50.0 Setting dotenv dotenv pip install python-dotenv==0.20.0 from dotenv import load_dotenv # File .env at the root of the project # Loading ENV env_path = Path('.') / '.env' # Instead of Path('.') you can use BASE_DIR load_dotenv(dotenv_path=env_path) Setting braces braces pip install django-braces==1.15.0 Setting mkdocs mkdocs pip install mkdocs==1.3.0 Setting django.contrib.humanize humanize To activate these filters, add 'django.contrib.humanize' to your INSTALLED_APPS setting. Once you\u2019ve done that, use {% load humanize %} in a template, and you\u2019ll have access to the following filters. Pillow pip install Pillow==9.1.1","title":"pip"},{"location":"pip/#social-network","text":"","title":"Social network"},{"location":"pip/#django-version","text":"Django==4.0.5","title":"Django Version"},{"location":"pip/#setting-jupyter","text":"jupyter pip install notebook Add to settings.py: os.environ['DJANGO_ALLOW_ASYNC_UNSAFE'] = 'true'","title":"Setting Jupyter"},{"location":"pip/#setting-django-extensions","text":"django-extensions pip install django-extensions==3.1.5","title":"Setting django-extensions"},{"location":"pip/#setting-django_debug_toolbar","text":"django-debug-toolbar django-debug-toolbar==3.4.0 if settings.DEBUG: urlpatterns += [path('__debug__/', include('debug_toolbar.urls'))]","title":"Setting django_debug_toolbar"},{"location":"pip/#setting-crispy-forms","text":"crispy-forms django-crispy-forms==1.14.0","title":"Setting crispy-forms"},{"location":"pip/#setting-cleanup","text":"cleanup pip install django-cleanup==6.0.0 # cleanup must be placed last in INSTALLED_APPS 'django_cleanup.apps.CleanupConfig'","title":"Setting cleanup"},{"location":"pip/#setting-ckeditor","text":"ckeditor pip install django-ckeditor==6.4.2","title":"Setting ckeditor"},{"location":"pip/#setting-channels","text":"channels python -m pip install -U channels==3.0.4 Add to setting.py: ASGI_APPLICATION = 'name_your_project.asgi.application' CHANNEL_LAYERS = { 'default': { 'BACKEND': 'channels.layers.InMemoryChannelLayer' }, } Create routing.py next to settings.py and add: from channels.routing import ProtocolTypeRouter, URLRouter from channels.auth import AuthMiddlewareStack application = ProtocolTypeRouter({ 'websocket': AuthMiddlewareStack( URLRouter( # chat.routing.websocket_urlpatterns ) ), })","title":"Setting channels"},{"location":"pip/#setting-django-allauth","text":"django-allauth pip install django-allauth==0.50.0","title":"Setting django-allauth"},{"location":"pip/#setting-dotenv","text":"dotenv pip install python-dotenv==0.20.0 from dotenv import load_dotenv # File .env at the root of the project # Loading ENV env_path = Path('.') / '.env' # Instead of Path('.') you can use BASE_DIR load_dotenv(dotenv_path=env_path)","title":"Setting dotenv"},{"location":"pip/#setting-braces","text":"braces pip install django-braces==1.15.0","title":"Setting braces"},{"location":"pip/#setting-mkdocs","text":"mkdocs pip install mkdocs==1.3.0","title":"Setting mkdocs"},{"location":"pip/#setting-djangocontribhumanize","text":"humanize To activate these filters, add 'django.contrib.humanize' to your INSTALLED_APPS setting. Once you\u2019ve done that, use {% load humanize %} in a template, and you\u2019ll have access to the following filters.","title":"Setting django.contrib.humanize"},{"location":"pip/#pillow","text":"pip install Pillow==9.1.1","title":"Pillow"},{"location":"settings/","text":"Setting STATIC STATIC_URL = 'static/' # https://docs.djangoproject.com/en/4.0/ref/settings/#static-files STATIC_ROOT = BASE_DIR / 'static' STATICFILES_DIRS = [ BASE_DIR / 'name_your_app/static', ] Setting MEDIA # https://docs.djangoproject.com/en/4.0/ref/settings/#media-root MEDIA_ROOT = BASE_DIR / 'media' MEDIA_URL = 'media/' Setting email EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' EMAIL_HOST = 'smtp.gmail.com' EMAIL_PORT = os.getenv('EMAIL_PORT') EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER') EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD') EMAIL_USE_TLS = True EMAIL_USE_SSL = False","title":"settings"},{"location":"settings/#setting-static","text":"STATIC_URL = 'static/' # https://docs.djangoproject.com/en/4.0/ref/settings/#static-files STATIC_ROOT = BASE_DIR / 'static' STATICFILES_DIRS = [ BASE_DIR / 'name_your_app/static', ]","title":"Setting STATIC"},{"location":"settings/#setting-media","text":"# https://docs.djangoproject.com/en/4.0/ref/settings/#media-root MEDIA_ROOT = BASE_DIR / 'media' MEDIA_URL = 'media/'","title":"Setting MEDIA"},{"location":"settings/#setting-email","text":"EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' EMAIL_HOST = 'smtp.gmail.com' EMAIL_PORT = os.getenv('EMAIL_PORT') EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER') EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD') EMAIL_USE_TLS = True EMAIL_USE_SSL = False","title":"Setting email"},{"location":"blog/models/","text":"","title":"models"},{"location":"blog/templates/","text":"","title":"Templates"},{"location":"blog/urls/","text":"","title":"Urls"},{"location":"blog/view/","text":"","title":"blog"}]}